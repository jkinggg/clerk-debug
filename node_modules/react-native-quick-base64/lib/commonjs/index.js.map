{"version":3,"sources":["index.tsx"],"names":["Base64Module","NativeModules","QuickBase64","install","getLens","b64","len","length","Error","validLen","indexOf","placeHoldersLen","uint8ArrayToString","array","out","i","c","String","fromCharCode","stringToArrayBuffer","str","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","byteLength","lens","toByteArray","base64ToArrayBuffer","fallback","fromByteArray","uint8","base64FromArrayBuffer","buffer","byteOffset","slice","btoa","data","ab","atob","ua","shim","global"],"mappings":"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","sourcesContent":["import { NativeModules } from 'react-native'\nimport fallback from 'base64-js'\n\nconst Base64Module = NativeModules.QuickBase64\n\nif (Base64Module && typeof Base64Module.install === 'function') {\n  Base64Module.install()\n}\n\ntype FuncBase64ToArrayBuffer = (data: string) => ArrayBuffer\ntype FuncBase64FromArrayBuffer = (data: string | ArrayBuffer) => string\n\ndeclare var base64ToArrayBuffer: FuncBase64ToArrayBuffer | undefined\ndeclare const base64FromArrayBuffer: FuncBase64FromArrayBuffer | undefined\n\n// from https://github.com/beatgammit/base64-js/blob/master/index.js\nfunction getLens(b64: string) {\n  let len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  let validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  let placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\nfunction uint8ArrayToString(array: Uint8Array) {\n  let out = '',\n    i = 0,\n    len = array.length\n  while (i < len) {\n    const c = array[i++]\n    out += String.fromCharCode(c)\n  }\n  return out\n}\n\nfunction stringToArrayBuffer(str: string) {\n  const buf = new ArrayBuffer(str.length)\n  const bufView = new Uint8Array(buf)\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i)\n  }\n  return buf\n}\n\nexport function byteLength(b64: string): number {\n  let lens = getLens(b64)\n  let validLen = lens[0]\n  let placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen\n}\n\nexport function toByteArray(b64: string): Uint8Array {\n  if (typeof base64ToArrayBuffer !== 'undefined') {\n    return new Uint8Array(base64ToArrayBuffer(b64))\n  } else {\n    return fallback.toByteArray(b64)\n  }\n}\n\nexport function fromByteArray(uint8: Uint8Array): string {\n  if (typeof base64FromArrayBuffer !== 'undefined') {\n    if (uint8.buffer.byteLength > uint8.byteLength || uint8.byteOffset > 0) {\n      return base64FromArrayBuffer(\n        uint8.buffer.slice(\n          uint8.byteOffset,\n          uint8.byteOffset + uint8.byteLength\n        )\n      )\n    }\n    return base64FromArrayBuffer(uint8.buffer)\n  } else {\n    return fallback.fromByteArray(uint8)\n  }\n}\n\nexport function btoa(data: string): string {\n  const ab = stringToArrayBuffer(data)\n  if (typeof base64FromArrayBuffer !== 'undefined') {\n    return base64FromArrayBuffer(ab)\n  } else {\n    return fallback.fromByteArray(new Uint8Array(ab))\n  }\n}\n\nexport function atob(b64: string): string {\n  const ua = toByteArray(b64)\n  return uint8ArrayToString(ua)\n}\n\nexport function shim() {\n  ;(global as any).btoa = btoa\n  ;(global as any).atob = atob\n}\n"]}