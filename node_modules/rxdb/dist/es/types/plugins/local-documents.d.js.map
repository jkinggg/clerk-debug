{"version":3,"file":"local-documents.d.js","names":[],"sources":["../../../../src/types/plugins/local-documents.d.ts"],"sourcesContent":["import { DocumentCache } from '../../doc-cache';\nimport { IncrementalWriteQueue } from '../../incremental-write';\nimport { RxCollection } from '../rx-collection';\nimport { RxDatabase } from '../rx-database';\nimport { RxDocumentBase } from '../rx-document';\nimport { RxStorageInstance } from '../rx-storage.interface';\nimport { Override } from '../util';\n\nexport type LocalDocumentParent = RxDatabase | RxCollection;\nexport type LocalDocumentState = {\n    database: RxDatabase;\n    parent: LocalDocumentParent;\n    storageInstance: RxStorageInstance<RxLocalDocumentData, any, any>;\n    docCache: DocumentCache<RxLocalDocumentData, {}>;\n    incrementalWriteQueue: IncrementalWriteQueue<RxLocalDocumentData>;\n};\nexport type RxLocalDocumentData<\n    Data = {\n        // local documents are schemaless and contain any data\n        [key: string]: any;\n    }\n> = {\n    id: string;\n    data: Data;\n};\n\ndeclare type LocalDocumentModifyFunction<Data> = (\n    doc: Data,\n    rxLocalDocument: RxLocalDocument<any, Data>\n) => Data | Promise<Data>;\n\n\nexport declare type RxLocalDocument<Parent, Data = any> = Override<\nRxDocumentBase<RxLocalDocumentData<Data>, {}>,\n{\n    readonly parent: Parent;\n    isLocal(): true;\n\n    /**\n         * Because local documents store their relevant data inside of the 'data' property,\n         * the incremental mutation methods are changed a bit to only allow to change parts of the data property.\n         */\n    incrementalModify(mutationFunction: LocalDocumentModifyFunction<Data>): Promise<RxLocalDocument<Parent, Data>>;\n    incrementalPatch(patch: Partial<Data>): Promise<RxLocalDocument<Parent, Data>>;\n}\n>;\n"],"mappings":""}