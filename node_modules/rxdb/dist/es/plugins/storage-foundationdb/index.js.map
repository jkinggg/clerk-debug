{"version":3,"file":"index.js","names":["ensureRxStorageInstanceParamsAreCorrect","RxStorageDefaultStatics","createFoundationDBStorageInstance","versionSet","getRxStorageFoundationDB","settings","apiVersion","Error","setAPIVersion","require","storage","name","statics","createStorageInstance","params","useSettings","Object","assign","options","batchSize"],"sources":["../../../../src/plugins/storage-foundationdb/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\nimport { RxStorageDefaultStatics } from '../../rx-storage-statics';\nimport type {\n    RxStorageInstanceCreationParams\n} from '../../types';\nimport type {\n    RxStorageFoundationDB,\n    RxStorageFoundationDBInstanceCreationOptions,\n    RxStorageFoundationDBSettings\n} from './foundationdb-types';\n\nimport {\n    createFoundationDBStorageInstance,\n    RxStorageInstanceFoundationDB\n} from './rx-storage-instance-foundationdb';\n\n\nlet versionSet: undefined | number;\n\nexport function getRxStorageFoundationDB(\n    settings: RxStorageFoundationDBSettings\n): RxStorageFoundationDB {\n    if (versionSet && versionSet !== settings.apiVersion) {\n        throw new Error('foundationdb already initialized with api version ' + versionSet);\n    } else if (!versionSet) {\n        versionSet = settings.apiVersion;\n        const { setAPIVersion } = require('foundationdb');\n        setAPIVersion(settings.apiVersion);\n    }\n\n\n    const storage: RxStorageFoundationDB = {\n        name: 'foundationdb',\n        statics: RxStorageDefaultStatics,\n        createStorageInstance<RxDocType>(\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageFoundationDBInstanceCreationOptions>\n        ): Promise<RxStorageInstanceFoundationDB<RxDocType>> {\n            ensureRxStorageInstanceParamsAreCorrect(params);\n            const useSettings = Object.assign(\n                {},\n                settings,\n                params.options\n            );\n            if (!useSettings.batchSize) {\n                useSettings.batchSize = 50;\n            }\n            return createFoundationDBStorageInstance(this, params, useSettings);\n        }\n    };\n\n    return storage;\n}\n\n\nexport * from './foundationdb-types';\nexport * from './foundationdb-helpers';\n"],"mappings":"AAAA,SAASA,uCAAuC,QAAQ,yBAAyB;AACjF,SAASC,uBAAuB,QAAQ,0BAA0B;AAUlE,SACIC,iCAAiC,QAE9B,oCAAoC;AAG3C,IAAIC,UAA8B;AAElC,OAAO,SAASC,wBAAwBA,CACpCC,QAAuC,EAClB;EACrB,IAAIF,UAAU,IAAIA,UAAU,KAAKE,QAAQ,CAACC,UAAU,EAAE;IAClD,MAAM,IAAIC,KAAK,CAAC,oDAAoD,GAAGJ,UAAU,CAAC;EACtF,CAAC,MAAM,IAAI,CAACA,UAAU,EAAE;IACpBA,UAAU,GAAGE,QAAQ,CAACC,UAAU;IAChC,IAAM;MAAEE;IAAc,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;IACjDD,aAAa,CAACH,QAAQ,CAACC,UAAU,CAAC;EACtC;EAGA,IAAMI,OAA8B,GAAG;IACnCC,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAEX,uBAAuB;IAChCY,qBAAqBA,CACjBC,MAAgG,EAC/C;MACjDd,uCAAuC,CAACc,MAAM,CAAC;MAC/C,IAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAC7B,CAAC,CAAC,EACFZ,QAAQ,EACRS,MAAM,CAACI,OAAO,CACjB;MACD,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE;QACxBJ,WAAW,CAACI,SAAS,GAAG,EAAE;MAC9B;MACA,OAAOjB,iCAAiC,CAAC,IAAI,EAAEY,MAAM,EAAEC,WAAW,CAAC;IACvE;EACJ,CAAC;EAED,OAAOL,OAAO;AAClB;AAGA,cAAc,sBAAsB;AACpC,cAAc,wBAAwB"}