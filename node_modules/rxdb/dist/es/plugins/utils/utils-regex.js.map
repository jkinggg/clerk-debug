{"version":3,"file":"utils-regex.js","names":["ensureNotFalsy","REGEX_ALL_DOTS","REGEX_ALL_PIPES","REGEX_PARSE_REGEX_EXPRESSION","parseRegex","regex","matches","toString","match","pattern","flags"],"sources":["../../../../src/plugins/utils/utils-regex.ts"],"sourcesContent":["import { ensureNotFalsy } from './utils-other';\n\nexport const REGEX_ALL_DOTS = /\\./g;\nexport const REGEX_ALL_PIPES = /\\|/g;\n\n\n\nexport type ParsedRegex = {\n    pattern: string;\n    flags: string;\n};\n\n/**\n * @link https://stackoverflow.com/a/26034888/3443137\n*/\nexport const REGEX_PARSE_REGEX_EXPRESSION = /(\\/?)(.+)\\1([a-z]*)/i;\nexport function parseRegex(regex: RegExp): ParsedRegex {\n    const matches = ensureNotFalsy(regex.toString().match(REGEX_PARSE_REGEX_EXPRESSION));\n    return {\n        pattern: matches[2],\n        flags: matches[3]\n    };\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,eAAe;AAE9C,OAAO,IAAMC,cAAc,GAAG,KAAK;AACnC,OAAO,IAAMC,eAAe,GAAG,KAAK;AASpC;AACA;AACA;AACA,OAAO,IAAMC,4BAA4B,GAAG,sBAAsB;AAClE,OAAO,SAASC,UAAUA,CAACC,KAAa,EAAe;EACnD,IAAMC,OAAO,GAAGN,cAAc,CAACK,KAAK,CAACE,QAAQ,EAAE,CAACC,KAAK,CAACL,4BAA4B,CAAC,CAAC;EACpF,OAAO;IACHM,OAAO,EAAEH,OAAO,CAAC,CAAC,CAAC;IACnBI,KAAK,EAAEJ,OAAO,CAAC,CAAC;EACpB,CAAC;AACL"}