{"version":3,"file":"p2p-helper.js","names":["_rxjs","require","isMasterInP2PReplication","hashFunction","ownStorageToken","otherStorageToken","isMaster","join","sendMessageAndAwaitAnswer","handler","peer","message","requestId","id","answerPromise","firstValueFrom","response$","pipe","filter","d","response","map","send"],"sources":["../../../../src/plugins/replication-p2p/p2p-helper.ts"],"sourcesContent":["import type {\n    HashFunction\n} from '../../types';\nimport type {\n    P2PConnectionHandler,\n    P2PMessage,\n    P2PPeer,\n    P2PResponse} from './p2p-types';\nimport { filter, firstValueFrom, map } from 'rxjs';\n\n\n\n/**\n * To deterministically define which peer is master and\n * which peer is fork, we compare the storage tokens.\n * But we have to hash them before, to ensure that\n * a storageToken like 'aaaaaa' is not always the master\n * for all peers.\n */\nexport function isMasterInP2PReplication(\n    hashFunction: HashFunction,\n    ownStorageToken: string,\n    otherStorageToken: string\n): boolean {\n    const isMaster =\n        hashFunction([ownStorageToken, otherStorageToken].join('|'))\n        >\n        hashFunction([otherStorageToken, ownStorageToken].join('|'));\n    return isMaster;\n}\n\nexport function sendMessageAndAwaitAnswer(\n    handler: P2PConnectionHandler,\n    peer: P2PPeer,\n    message: P2PMessage\n): Promise<P2PResponse> {\n    const requestId = message.id;\n    const answerPromise = firstValueFrom(\n        handler.response$.pipe(\n            filter(d => d.peer === peer),\n            filter(d => d.response.id === requestId),\n            map(d => d.response)\n        )\n    );\n    handler.send(peer, message);\n    return answerPromise;\n}\n"],"mappings":";;;;;;;AAQA,IAAAA,KAAA,GAAAC,OAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,wBAAwBA,CACpCC,YAA0B,EAC1BC,eAAuB,EACvBC,iBAAyB,EAClB;EACP,IAAMC,QAAQ,GACVH,YAAY,CAAC,CAACC,eAAe,EAAEC,iBAAiB,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC,GAE5DJ,YAAY,CAAC,CAACE,iBAAiB,EAAED,eAAe,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EAChE,OAAOD,QAAQ;AACnB;AAEO,SAASE,yBAAyBA,CACrCC,OAA6B,EAC7BC,IAAa,EACbC,OAAmB,EACC;EACpB,IAAMC,SAAS,GAAGD,OAAO,CAACE,EAAE;EAC5B,IAAMC,aAAa,GAAG,IAAAC,oBAAc,EAChCN,OAAO,CAACO,SAAS,CAACC,IAAI,CAClB,IAAAC,YAAM,EAACC,CAAC,IAAIA,CAAC,CAACT,IAAI,KAAKA,IAAI,CAAC,EAC5B,IAAAQ,YAAM,EAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACP,EAAE,KAAKD,SAAS,CAAC,EACxC,IAAAS,SAAG,EAACF,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,CACvB,CACJ;EACDX,OAAO,CAACa,IAAI,CAACZ,IAAI,EAAEC,OAAO,CAAC;EAC3B,OAAOG,aAAa;AACxB"}