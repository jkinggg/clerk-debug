{"version":3,"file":"types.js","names":[],"sources":["../../../../src/plugins/storage-remote-websocket/types.ts"],"sourcesContent":["import type {\n    WebsocketServerState\n} from '../replication-websocket';\nimport type { ServerOptions, ClientOptions } from 'ws';\nimport type { RxDatabase, RxStorage, RxStorageStatics } from '../../types';\nimport type {\n    CustomRequestHandler,\n    RxStorageRemoteExposeType\n} from '../storage-remote/storage-remote-types';\nimport { RxStorageRemote } from '../storage-remote';\n\nexport type RxStorageRemoteWebsocketServerOptions = ServerOptions & {\n    storage?: RxStorage<any, any>;\n    database?: RxDatabase<any, any, any>;\n    customRequestHandler?: CustomRequestHandler<any, any>;\n};\n\nexport type RxStorageRemoteWebsocketServerState = {\n    serverState: WebsocketServerState;\n    exposeState: RxStorageRemoteExposeType;\n};\n\nexport type RxStorageRemoteWebsocketClientOptions = ClientOptions & {\n    statics: RxStorageStatics;\n    url: string;\n    /**\n     * By default, sockets are cached and reused by url.\n     * You can disable this behavior by setting reuseSocketConnection=false\n     * This can be useful in tests to simulate multiple clients.\n     */\n    disableCache?: boolean;\n};\n\nexport type RxStorageRemoteWebsocketClient = RxStorageRemote;\n"],"mappings":""}