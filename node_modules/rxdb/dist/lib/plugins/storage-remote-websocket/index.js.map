{"version":3,"file":"index.js","names":["_rxjs","require","_utils","_replicationWebsocket","_remote","_rxStorageRemote","_storageRemoteHelpers","_types","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","startRxStorageRemoteWebsocketServer","options","serverState","startSocketServer","websocketByConnectionId","Map","messages$","Subject","exposeSettings","asObservable","storage","database","customRequestHandler","send","msg","ws","getFromMapOrThrow","connectionId","JSON","stringify","exposeState","exposeRxStorageRemote","onConnection$","subscribe","onCloseHandlers","onclose","map","fn","on","messageString","message","parse","has","method","createErrorAnswer","Error","set","next","getRxStorageRemoteWebsocket","identifier","url","disableCache","randomCouchString","join","websocketClientPromise","getWebSocket","getRxStorageRemote","statics","then","websocketClient","socket","message$"],"sources":["../../../../src/plugins/storage-remote-websocket/index.ts"],"sourcesContent":["import { Subject } from 'rxjs';\nimport type {\n    WebSocket\n} from 'ws';\nimport {\n    getFromMapOrThrow,\n    randomCouchString\n} from '../../plugins/utils';\nimport {\n    getWebSocket,\n    startSocketServer\n} from '../replication-websocket';\nimport { exposeRxStorageRemote } from '../storage-remote/remote';\nimport { getRxStorageRemote } from '../storage-remote/rx-storage-remote';\nimport { createErrorAnswer } from '../storage-remote/storage-remote-helpers';\nimport type {\n    MessageFromRemote,\n    MessageToRemote,\n    RxStorageRemoteExposeSettings\n} from '../storage-remote/storage-remote-types';\nimport type {\n    RxStorageRemoteWebsocketClient,\n    RxStorageRemoteWebsocketClientOptions,\n    RxStorageRemoteWebsocketServerOptions,\n    RxStorageRemoteWebsocketServerState\n} from './types';\nexport function startRxStorageRemoteWebsocketServer(\n    options: RxStorageRemoteWebsocketServerOptions\n): RxStorageRemoteWebsocketServerState {\n    const serverState = startSocketServer(options);\n\n    const websocketByConnectionId = new Map<string, WebSocket>();\n    const messages$ = new Subject<MessageToRemote>();\n    const exposeSettings: RxStorageRemoteExposeSettings = {\n        messages$: messages$.asObservable(),\n        storage: options.storage as any,\n        database: options.database as any,\n        customRequestHandler: options.customRequestHandler,\n        send(msg) {\n            const ws = getFromMapOrThrow(websocketByConnectionId, msg.connectionId);\n            ws.send(JSON.stringify(msg));\n        }\n    };\n    const exposeState = exposeRxStorageRemote(exposeSettings);\n\n    serverState.onConnection$.subscribe(ws => {\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', (messageString: string) => {\n            const message: MessageToRemote = JSON.parse(messageString);\n            const connectionId = message.connectionId;\n            if (!websocketByConnectionId.has(connectionId)) {\n                /**\n                 * If first message is not 'create',\n                 * it is an error.\n                 */\n                if (\n                    message.method !== 'create' &&\n                    message.method !== 'custom'\n                ) {\n                    ws.send(\n                        JSON.stringify(\n                            createErrorAnswer(message, new Error('First call must be a create call but is: ' + JSON.stringify(message)))\n                        )\n                    );\n                    return;\n                }\n                websocketByConnectionId.set(connectionId, ws);\n            }\n            messages$.next(message);\n        });\n    });\n\n    return {\n        serverState,\n        exposeState\n    };\n}\n\n\n\nexport function getRxStorageRemoteWebsocket(\n    options: RxStorageRemoteWebsocketClientOptions\n): RxStorageRemoteWebsocketClient {\n    const identifier = [\n        options.url,\n        'rx-remote-storage-websocket',\n        options.disableCache ? randomCouchString() : ''\n    ].join('');\n    const messages$ = new Subject<MessageFromRemote>();\n    const websocketClientPromise = getWebSocket(options.url, identifier);\n    const storage = getRxStorageRemote({\n        identifier,\n        statics: options.statics,\n        messages$,\n        send(msg) {\n            return websocketClientPromise\n                .then(websocketClient => websocketClient.socket.send(JSON.stringify(msg)));\n        }\n    });\n    websocketClientPromise.then((websocketClient) => {\n        websocketClient.message$.subscribe(msg => messages$.next(msg));\n    });\n    return storage;\n}\n\n\nexport * from './types';\n\n"],"mappings":"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"}