{"version":3,"file":"utils-blob.js","names":["_utilsBase","require","createBlob","data","type","blob","Blob","createBlobFromBase64","base64String","base64Response","fetch","isBlob","Buffer","isBuffer","blobToString","blobType","Object","prototype","toString","call","Promise","resolve","text","blobToBase64String","arrayBuffer","URL","createObjectURL","then","res","arrayBufferToBase64","getBlobSize","size"],"sources":["../../../../src/plugins/utils/utils-blob.ts"],"sourcesContent":["import { arrayBufferToBase64 } from './utils-base64';\n\n/**\n * Since RxDB 13.0.0 we only use Blob instead of falling back to Buffer,\n * because Node.js >18 supports Blobs anyway.\n */\n/**\n * depending if we are on node or browser,\n * we have to use Buffer(node) or Blob(browser)\n */\nexport function createBlob(\n    data: string,\n    type: string\n): Blob {\n    const blob = new Blob([data], {\n        type\n    });\n    return blob;\n}\n\nexport async function createBlobFromBase64(\n    base64String: string,\n    type: string\n): Promise<Blob> {\n    const base64Response = await fetch(`data:${type};base64,${base64String}`);\n    const blob = await base64Response.blob();\n    return blob;\n\n}\n\nexport function isBlob(data: any): boolean {\n    if (data instanceof Blob || (typeof Buffer !== 'undefined' && Buffer.isBuffer(data))) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function blobToString(blob: Blob | string): Promise<string> {\n    /**\n     * in the electron-renderer we have a typed array instead of a blob\n     * so we have to transform it.\n     * @link https://github.com/pubkey/rxdb/issues/1371\n     */\n    const blobType = Object.prototype.toString.call(blob);\n    if (blobType === '[object Uint8Array]') {\n        blob = new Blob([blob]);\n    }\n    if (typeof blob === 'string') {\n        return Promise.resolve(blob);\n    }\n\n    return blob.text();\n}\n\nexport async function blobToBase64String(blob: Blob | string): Promise<string> {\n    if (typeof blob === 'string') {\n        return blob;\n    }\n\n    /**\n     * in the electron-renderer we have a typed array instead of a blob\n     * so we have to transform it.\n     * @link https://github.com/pubkey/rxdb/issues/1371\n     */\n    const blobType = Object.prototype.toString.call(blob);\n    if (blobType === '[object Uint8Array]') {\n        blob = new Blob([blob]);\n    }\n\n    const arrayBuffer = await fetch(URL.createObjectURL(blob)).then(res => res.arrayBuffer());\n    return arrayBufferToBase64(arrayBuffer);\n}\n\nexport function getBlobSize(blob: Blob): number {\n    return blob.size;\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CACtBC,IAAY,EACZC,IAAY,EACR;EACJ,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,IAAI,CAAC,EAAE;IAC1BC;EACJ,CAAC,CAAC;EACF,OAAOC,IAAI;AACf;AAEO,eAAeE,oBAAoBA,CACtCC,YAAoB,EACpBJ,IAAY,EACC;EACb,IAAMK,cAAc,GAAG,MAAMC,KAAK,WAASN,IAAI,gBAAWI,YAAY,CAAG;EACzE,IAAMH,IAAI,GAAG,MAAMI,cAAc,CAACJ,IAAI,EAAE;EACxC,OAAOA,IAAI;AAEf;AAEO,SAASM,MAAMA,CAACR,IAAS,EAAW;EACvC,IAAIA,IAAI,YAAYG,IAAI,IAAK,OAAOM,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,CAACV,IAAI,CAAE,EAAE;IAClF,OAAO,IAAI;EACf,CAAC,MAAM;IACH,OAAO,KAAK;EAChB;AACJ;AAEO,SAASW,YAAYA,CAACT,IAAmB,EAAmB;EAC/D;AACJ;AACA;AACA;AACA;EACI,IAAMU,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACd,IAAI,CAAC;EACrD,IAAIU,QAAQ,KAAK,qBAAqB,EAAE;IACpCV,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACD,IAAI,CAAC,CAAC;EAC3B;EACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAOe,OAAO,CAACC,OAAO,CAAChB,IAAI,CAAC;EAChC;EAEA,OAAOA,IAAI,CAACiB,IAAI,EAAE;AACtB;AAEO,eAAeC,kBAAkBA,CAAClB,IAAmB,EAAmB;EAC3E,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAOA,IAAI;EACf;;EAEA;AACJ;AACA;AACA;AACA;EACI,IAAMU,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACd,IAAI,CAAC;EACrD,IAAIU,QAAQ,KAAK,qBAAqB,EAAE;IACpCV,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACD,IAAI,CAAC,CAAC;EAC3B;EAEA,IAAMmB,WAAW,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACC,eAAe,CAACrB,IAAI,CAAC,CAAC,CAACsB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACJ,WAAW,EAAE,CAAC;EACzF,OAAO,IAAAK,8BAAmB,EAACL,WAAW,CAAC;AAC3C;AAEO,SAASM,WAAWA,CAACzB,IAAU,EAAU;EAC5C,OAAOA,IAAI,CAAC0B,IAAI;AACpB"}