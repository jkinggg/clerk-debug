{"version":3,"file":"utils-object.js","names":["deepFreeze","o","Object","freeze","getOwnPropertyNames","forEach","prop","hasOwnProperty","isFrozen","objectPathMonad","objectPath","split","length","obj","currentVal","t","subPath","getFromObjectOrThrow","key","val","Error","flattenObject","ob","toReturn","i","flatObject","x","flatClone","assign","firstPropertyNameOfObject","keys","firstPropertyValueOfObject","sortObject","noArraySort","Array","isArray","sort","a","b","localeCompare","map","RegExp","out","deepClone","src","ret","dest","clone","exports","overwriteGetterForCaching","getterName","value","defineProperty","get","stringifyFilter","toString"],"sources":["../../../../src/plugins/utils/utils-object.ts"],"sourcesContent":["import type {\n    DeepReadonlyObject\n} from '../../types';\n\nexport function deepFreeze<T>(o: T): T {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (\n            (o as any).hasOwnProperty(prop)\n            &&\n            (o as any)[prop] !== null\n            &&\n            (\n                typeof (o as any)[prop] === 'object'\n                ||\n                typeof (o as any)[prop] === 'function'\n            )\n            &&\n            !Object.isFrozen((o as any)[prop])\n        ) {\n            deepFreeze((o as any)[prop]);\n        }\n    });\n    return o;\n}\n\n\n\n/**\n * To get specific nested path values from objects,\n * RxDB normally uses the 'dot-prop' npm module.\n * But when performance is really relevant, this is not fast enough.\n * Instead we use a monad that can prepare some stuff up front\n * and we can re-use the generated function.\n */\nexport type ObjectPathMonadFunction<T, R = any> = (obj: T) => R;\nexport function objectPathMonad<T, R = any>(objectPath: string): ObjectPathMonadFunction<T, R> {\n    const split = objectPath.split('.');\n\n    /**\n     * Performance shortcut,\n     * if no nested path is used,\n     * directly return the field of the object.\n     */\n    if (split.length === 1) {\n        return (obj: T) => (obj as any)[objectPath];\n    }\n\n\n    return (obj: T) => {\n        let currentVal: any = obj;\n        let t = 0;\n        while (t < split.length) {\n            const subPath = split[t];\n            currentVal = currentVal[subPath];\n            if (typeof currentVal === 'undefined') {\n                return currentVal;\n            }\n            t++;\n        }\n        return currentVal;\n    };\n}\n\n\nexport function getFromObjectOrThrow<V>(\n    obj: { [k: string]: V; },\n    key: string\n): V {\n    const val = obj[key];\n    if (!val) {\n        throw new Error('missing value from object ' + key);\n    }\n    return val;\n}\n\n/**\n * returns a flattened object\n * @link https://gist.github.com/penguinboy/762197\n */\nexport function flattenObject(ob: any) {\n    const toReturn: any = {};\n\n    for (const i in ob) {\n        if (!ob.hasOwnProperty(i)) continue;\n\n        if ((typeof ob[i]) === 'object') {\n            const flatObject = flattenObject(ob[i]);\n            for (const x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) continue;\n\n                toReturn[i + '.' + x] = flatObject[x];\n            }\n        } else {\n            toReturn[i] = ob[i];\n        }\n    }\n    return toReturn;\n}\n\n\n/**\n * does a flat copy on the objects,\n * is about 3 times faster then using deepClone\n * @link https://jsperf.com/object-rest-spread-vs-clone/2\n */\nexport function flatClone<T>(obj: T | DeepReadonlyObject<T> | Readonly<T>): T {\n    return Object.assign({}, obj) as any;\n}\n\n/**\n * @link https://stackoverflow.com/a/11509718/3443137\n */\nexport function firstPropertyNameOfObject(obj: any): string {\n    return Object.keys(obj)[0];\n}\nexport function firstPropertyValueOfObject<T>(obj: { [k: string]: T; }): T {\n    const key = Object.keys(obj)[0];\n    return obj[key];\n}\n\n\n/**\n * deep-sort an object so its attributes are in lexical order.\n * Also sorts the arrays inside of the object if no-array-sort not set\n */\nexport function sortObject(obj: any, noArraySort = false): any {\n    if (!obj) return obj; // do not sort null, false or undefined\n\n    // array\n    if (!noArraySort && Array.isArray(obj)) {\n        return obj\n            .sort((a, b) => {\n                if (typeof a === 'string' && typeof b === 'string')\n                    return a.localeCompare(b);\n\n                if (typeof a === 'object') return 1;\n                else return -1;\n            })\n            .map(i => sortObject(i, noArraySort));\n    }\n\n    // object\n    // array is also of type object\n    if (typeof obj === 'object' && !Array.isArray(obj)) {\n        if (obj instanceof RegExp) {\n            return obj;\n        }\n\n        const out: any = {};\n        Object.keys(obj)\n            .sort((a, b) => a.localeCompare(b))\n            .forEach(key => {\n                out[key] = sortObject(obj[key], noArraySort);\n            });\n        return out;\n    }\n\n    // everything else\n    return obj;\n}\n\n\n\n/**\n * Deep clone a plain json object.\n * Does not work with recursive stuff\n * or non-plain-json.\n * IMPORTANT: Performance of this is very important,\n * do not change it without running performance tests!\n *\n * @link https://github.com/zxdong262/deep-copy/blob/master/src/index.ts\n */\nfunction deepClone<T>(src: T | DeepReadonlyObject<T>): T {\n    if (!src) {\n        return src;\n    }\n    if (src === null || typeof (src) !== 'object') {\n        return src;\n    }\n    if (Array.isArray(src)) {\n        const ret = new Array(src.length);\n        let i = ret.length;\n        while (i--) {\n            ret[i] = deepClone(src[i]);\n        }\n        return ret as any;\n    }\n    const dest: any = {};\n    // eslint-disable-next-line guard-for-in\n    for (const key in src) {\n        dest[key] = deepClone(src[key]);\n    }\n    return dest;\n}\nexport const clone = deepClone;\n\n\n\n/**\n * overwrites the getter with the actual value\n * Mostly used for caching stuff on the first run\n */\nexport function overwriteGetterForCaching<ValueType = any>(\n    obj: any,\n    getterName: string,\n    value: ValueType\n): ValueType {\n    Object.defineProperty(obj, getterName, {\n        get: function () {\n            return value;\n        }\n    });\n    return value;\n}\n\n\n\n/**\n * used to JSON.stringify() objects that contain a regex\n * @link https://stackoverflow.com/a/33416684 thank you Fabian Jakobs!\n */\nexport function stringifyFilter(key: string, value: any) {\n    if (value instanceof RegExp) {\n        return value.toString();\n    }\n    return value;\n}\n\n\n"],"mappings":"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"}