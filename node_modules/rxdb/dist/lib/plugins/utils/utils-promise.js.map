{"version":3,"file":"utils-promise.js","names":["nextTick","Promise","res","setTimeout","promiseWait","ms","toPromise","maybePromise","then","resolve","PROMISE_RESOLVE_TRUE","exports","PROMISE_RESOLVE_FALSE","PROMISE_RESOLVE_NULL","PROMISE_RESOLVE_VOID","requestIdlePromise","timeout","window","requestIdleCallbackIfAvailable","fun","promiseSeries","tasks","initial","reduce","current","next"],"sources":["../../../../src/plugins/utils/utils-promise.ts"],"sourcesContent":["/**\n * returns a promise that resolves on the next tick\n */\nexport function nextTick(): Promise<void> {\n    return new Promise(res => setTimeout(res, 0));\n}\n\nexport function promiseWait(ms: number = 0): Promise<void> {\n    return new Promise(res => setTimeout(res, ms));\n}\n\nexport function toPromise<T>(maybePromise: Promise<T> | T): Promise<T> {\n    if (maybePromise && typeof (maybePromise as any).then === 'function') {\n        // is promise\n        return maybePromise as any;\n    } else {\n        return Promise.resolve(maybePromise);\n    }\n}\n\n\nexport const PROMISE_RESOLVE_TRUE: Promise<true> = Promise.resolve(true);\nexport const PROMISE_RESOLVE_FALSE: Promise<false> = Promise.resolve(false);\nexport const PROMISE_RESOLVE_NULL: Promise<null> = Promise.resolve(null);\nexport const PROMISE_RESOLVE_VOID: Promise<void> = Promise.resolve();\n\n\nexport function requestIdlePromise(timeout: number | null = null) {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) {\n        return new Promise(\n            res => (window as any)['requestIdleCallback'](res, {\n                timeout\n            })\n        );\n    } else {\n        return promiseWait(0);\n    }\n}\n\n\n/**\n * run the callback if requestIdleCallback available\n * do nothing if not\n * @link https://developer.mozilla.org/de/docs/Web/API/Window/requestIdleCallback\n */\nexport function requestIdleCallbackIfAvailable(fun: Function): void {\n    if (\n        typeof window === 'object' &&\n        (window as any)['requestIdleCallback']\n    ) (window as any)['requestIdleCallback'](fun);\n}\n\n\n/**\n * like Promise.all() but runs in series instead of parallel\n * @link https://github.com/egoist/promise.series/blob/master/index.js\n * @param tasks array with functions that return a promise\n */\nexport function promiseSeries(\n    tasks: Function[],\n    initial?: any\n): Promise<any[]> {\n    return tasks\n        .reduce(\n            (current, next) => (current as any).then(next),\n            Promise.resolve(initial)\n        );\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACO,SAASA,QAAQA,CAAA,EAAkB;EACtC,OAAO,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAE,CAAC,CAAC,CAAC;AACjD;AAEO,SAASE,WAAWA,CAACC,EAAU,GAAG,CAAC,EAAiB;EACvD,OAAO,IAAIJ,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEG,EAAE,CAAC,CAAC;AAClD;AAEO,SAASC,SAASA,CAAIC,YAA4B,EAAc;EACnE,IAAIA,YAAY,IAAI,OAAQA,YAAY,CAASC,IAAI,KAAK,UAAU,EAAE;IAClE;IACA,OAAOD,YAAY;EACvB,CAAC,MAAM;IACH,OAAON,OAAO,CAACQ,OAAO,CAACF,YAAY,CAAC;EACxC;AACJ;AAGO,IAAMG,oBAAmC,GAAGT,OAAO,CAACQ,OAAO,CAAC,IAAI,CAAC;AAACE,OAAA,CAAAD,oBAAA,GAAAA,oBAAA;AAClE,IAAME,qBAAqC,GAAGX,OAAO,CAACQ,OAAO,CAAC,KAAK,CAAC;AAACE,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AACrE,IAAMC,oBAAmC,GAAGZ,OAAO,CAACQ,OAAO,CAAC,IAAI,CAAC;AAACE,OAAA,CAAAE,oBAAA,GAAAA,oBAAA;AAClE,IAAMC,oBAAmC,GAAGb,OAAO,CAACQ,OAAO,EAAE;AAACE,OAAA,CAAAG,oBAAA,GAAAA,oBAAA;AAG9D,SAASC,kBAAkBA,CAACC,OAAsB,GAAG,IAAI,EAAE;EAC9D,IACI,OAAOC,MAAM,KAAK,QAAQ,IACzBA,MAAM,CAAS,qBAAqB,CAAC,EACxC;IACE,OAAO,IAAIhB,OAAO,CACdC,GAAG,IAAKe,MAAM,CAAS,qBAAqB,CAAC,CAACf,GAAG,EAAE;MAC/Cc;IACJ,CAAC,CAAC,CACL;EACL,CAAC,MAAM;IACH,OAAOZ,WAAW,CAAC,CAAC,CAAC;EACzB;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASc,8BAA8BA,CAACC,GAAa,EAAQ;EAChE,IACI,OAAOF,MAAM,KAAK,QAAQ,IACzBA,MAAM,CAAS,qBAAqB,CAAC,EACvCA,MAAM,CAAS,qBAAqB,CAAC,CAACE,GAAG,CAAC;AACjD;;AAGA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAaA,CACzBC,KAAiB,EACjBC,OAAa,EACC;EACd,OAAOD,KAAK,CACPE,MAAM,CACH,CAACC,OAAO,EAAEC,IAAI,KAAMD,OAAO,CAAShB,IAAI,CAACiB,IAAI,CAAC,EAC9CxB,OAAO,CAACQ,OAAO,CAACa,OAAO,CAAC,CAC3B;AACT"}