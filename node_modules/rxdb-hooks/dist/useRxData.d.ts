import { RxCollection } from 'rxdb';
import { Override } from './type.helpers';
import { UseRxQueryOptions, RxQueryResultJSON, RxQueryResultDoc, AnyRxQuery } from './useRxQuery';
export type QueryConstructor<T> = (collection: RxCollection<T>) => AnyRxQuery<T> | undefined;
declare function useRxData<T>(collectionName: string, queryConstructor: QueryConstructor<T> | undefined): RxQueryResultDoc<T>;
declare function useRxData<T>(collectionName: string, queryConstructor: QueryConstructor<T> | undefined, options?: Override<UseRxQueryOptions, {
    json?: false;
}>): RxQueryResultDoc<T>;
declare function useRxData<T>(collectionName: string, queryConstructor: QueryConstructor<T> | undefined, options?: Override<UseRxQueryOptions, {
    json: true;
}>): RxQueryResultJSON<T>;
export default useRxData;
